// Code generated by protoc-gen-go. DO NOT EDIT.
// source: storage.proto

package kkProto

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// *
// Internal persistent storage of device
type Storage struct {
	Version              *uint32     `protobuf:"varint,1,req,name=version" json:"version,omitempty"`
	Node                 *HDNodeType `protobuf:"bytes,2,opt,name=node" json:"node,omitempty"`
	Mnemonic             *string     `protobuf:"bytes,3,opt,name=mnemonic" json:"mnemonic,omitempty"`
	PassphraseProtection *bool       `protobuf:"varint,4,opt,name=passphrase_protection,json=passphraseProtection" json:"passphrase_protection,omitempty"`
	// DEPRECATED: optional uint32 pin_failed_attempts = 5;        // number of failed PIN attempts
	Pin                  *string       `protobuf:"bytes,6,opt,name=pin" json:"pin,omitempty"`
	Language             *string       `protobuf:"bytes,7,opt,name=language" json:"language,omitempty"`
	Label                *string       `protobuf:"bytes,8,opt,name=label" json:"label,omitempty"`
	Imported             *bool         `protobuf:"varint,9,opt,name=imported" json:"imported,omitempty"`
	Policies             []*PolicyType `protobuf:"bytes,10,rep,name=policies" json:"policies,omitempty"`
	PinFailArena         []uint32      `protobuf:"varint,11,rep,name=pin_fail_arena,json=pinFailArena" json:"pin_fail_arena,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Storage) Reset()         { *m = Storage{} }
func (m *Storage) String() string { return proto.CompactTextString(m) }
func (*Storage) ProtoMessage()    {}
func (*Storage) Descriptor() ([]byte, []int) {
	return fileDescriptor_storage_7811b8d34606b683, []int{0}
}
func (m *Storage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Storage.Unmarshal(m, b)
}
func (m *Storage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Storage.Marshal(b, m, deterministic)
}
func (dst *Storage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Storage.Merge(dst, src)
}
func (m *Storage) XXX_Size() int {
	return xxx_messageInfo_Storage.Size(m)
}
func (m *Storage) XXX_DiscardUnknown() {
	xxx_messageInfo_Storage.DiscardUnknown(m)
}

var xxx_messageInfo_Storage proto.InternalMessageInfo

func (m *Storage) GetVersion() uint32 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *Storage) GetNode() *HDNodeType {
	if m != nil {
		return m.Node
	}
	return nil
}

func (m *Storage) GetMnemonic() string {
	if m != nil && m.Mnemonic != nil {
		return *m.Mnemonic
	}
	return ""
}

func (m *Storage) GetPassphraseProtection() bool {
	if m != nil && m.PassphraseProtection != nil {
		return *m.PassphraseProtection
	}
	return false
}

func (m *Storage) GetPin() string {
	if m != nil && m.Pin != nil {
		return *m.Pin
	}
	return ""
}

func (m *Storage) GetLanguage() string {
	if m != nil && m.Language != nil {
		return *m.Language
	}
	return ""
}

func (m *Storage) GetLabel() string {
	if m != nil && m.Label != nil {
		return *m.Label
	}
	return ""
}

func (m *Storage) GetImported() bool {
	if m != nil && m.Imported != nil {
		return *m.Imported
	}
	return false
}

func (m *Storage) GetPolicies() []*PolicyType {
	if m != nil {
		return m.Policies
	}
	return nil
}

func (m *Storage) GetPinFailArena() []uint32 {
	if m != nil {
		return m.PinFailArena
	}
	return nil
}

func init() {
	proto.RegisterType((*Storage)(nil), "Storage")
}

func init() { proto.RegisterFile("storage.proto", fileDescriptor_storage_7811b8d34606b683) }

var fileDescriptor_storage_7811b8d34606b683 = []byte{
	// 292 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x44, 0x90, 0xd1, 0x4a, 0xf3, 0x30,
	0x14, 0x80, 0xe9, 0xba, 0xff, 0x5f, 0x77, 0xea, 0x86, 0x84, 0x09, 0x61, 0x37, 0x16, 0x11, 0xec,
	0x85, 0xf4, 0x42, 0x9f, 0xc0, 0x21, 0x22, 0x0c, 0x64, 0x54, 0xef, 0x47, 0x6c, 0x8f, 0x35, 0x2c,
	0x4d, 0x0e, 0x49, 0x1d, 0xf4, 0xfd, 0x7c, 0x30, 0x49, 0xea, 0xea, 0x5d, 0xbf, 0xf3, 0xd1, 0x7c,
	0x9c, 0x03, 0x0b, 0xd7, 0x19, 0x2b, 0x1a, 0x2c, 0xc8, 0x9a, 0xce, 0xac, 0xd3, 0xae, 0x27, 0x74,
	0x03, 0x5c, 0x7d, 0x4f, 0x60, 0xf6, 0x3a, 0x68, 0xc6, 0x61, 0x76, 0x44, 0xeb, 0xa4, 0xd1, 0x3c,
	0xca, 0x26, 0xf9, 0xa2, 0x3c, 0x21, 0xbb, 0x84, 0xa9, 0x36, 0x35, 0xf2, 0x49, 0x16, 0xe5, 0xe9,
	0x5d, 0x5a, 0x3c, 0x3f, 0xbe, 0x98, 0x1a, 0xdf, 0x7a, 0xc2, 0x32, 0x08, 0xb6, 0x86, 0xa4, 0xd5,
	0xd8, 0x1a, 0x2d, 0x2b, 0x1e, 0x67, 0x51, 0x3e, 0x2f, 0x47, 0x66, 0xf7, 0x70, 0x41, 0xc2, 0x39,
	0xfa, 0xb4, 0xc2, 0xe1, 0xde, 0x67, 0xb1, 0xea, 0x7c, 0x64, 0x9a, 0x45, 0x79, 0x52, 0xae, 0xfe,
	0xe4, 0x6e, 0x74, 0xec, 0x1c, 0x62, 0x92, 0x9a, 0xff, 0x0f, 0x6f, 0xf9, 0x4f, 0x9f, 0x50, 0x42,
	0x37, 0x5f, 0xa2, 0x41, 0x3e, 0x1b, 0x12, 0x27, 0x66, 0x2b, 0xf8, 0xa7, 0xc4, 0x3b, 0x2a, 0x9e,
	0x04, 0x31, 0x80, 0xff, 0x43, 0xb6, 0x64, 0x6c, 0x87, 0x35, 0x9f, 0x87, 0xd6, 0xc8, 0xec, 0x06,
	0x12, 0x32, 0x4a, 0x56, 0x12, 0x1d, 0x87, 0x2c, 0x0e, 0x5b, 0xed, 0xfc, 0xa0, 0x0f, 0x5b, 0x8d,
	0x92, 0x5d, 0xc3, 0x92, 0xa4, 0xde, 0x7f, 0x08, 0xa9, 0xf6, 0xc2, 0xa2, 0x16, 0x3c, 0xcd, 0xe2,
	0x7c, 0x51, 0x9e, 0x91, 0xd4, 0x4f, 0x42, 0xaa, 0x07, 0x3f, 0xdb, 0xdc, 0xc2, 0xba, 0x32, 0x6d,
	0x71, 0x40, 0xa4, 0x03, 0xf6, 0x45, 0x8d, 0x47, 0x59, 0x61, 0xb8, 0x70, 0x65, 0xd4, 0x66, 0xb9,
	0x45, 0xa4, 0x2d, 0xf6, 0xbf, 0x87, 0xfe, 0x09, 0x00, 0x00, 0xff, 0xff, 0x49, 0xbe, 0x72, 0xe8,
	0x91, 0x01, 0x00, 0x00,
}
